{"version":3,"file":"static/js/730.f0fec71b.chunk.js","mappings":"gQAUAA,IAAAA,YAAyBC,IAEzB,MAAMC,EAAiBC,IAAA,IAAC,IAAEC,EAAG,IAAEC,GAAKF,EAAA,OAClCG,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,UAAWH,EAAKI,SAAUL,EAAKM,OAAO,UAAW,EAGrDC,EAAgBC,IAAA,IAAEC,EAAGC,EAAGC,EAAGC,GAAEJ,EAAA,MAAK,CAGtC,CAACC,EAAGC,GACJ,CAACC,EAAGC,GACL,EAEKC,EAA2BA,KAC/B,MAAM,gBAAEC,IAAoBC,EAAAA,EAAAA,MACtBC,GAAMC,EAAAA,EAAAA,MAASC,QAmBrB,OAlBAC,EAAAA,EAAAA,GAAiB,cAAcC,IAA+B,IAA5BC,QAAQ,IAAErB,EAAG,IAAEsB,IAAOF,EAGtDG,QAAQC,IAAI,8CAEZ,IAEER,EAAIS,MAAM,CACRC,OAAQ,CAAC1B,EAAKsB,GACdK,KAAM,IAEV,CAAE,MAAOhB,GACPY,QAAQK,MAAMjB,GACdG,EAAgB,mDAAoD,CAClEe,QAAS,SAEb,KAEK,IAAI,EAqBb,EAlBoBC,IAAmB,IAAlB,SAAEC,GAAUD,EAE/B,OADAP,QAAQC,IAAI,wBAEVQ,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CACFC,OAAQtC,IACRuC,SAAS,+EACTC,iBAAkB,CAChBC,OAAQ9B,EAAc+B,EAAAA,IAExBC,QAAS,GAAGR,SAAA,EAEZ7B,EAAAA,EAAAA,KAACW,EAAwB,KACzBX,EAAAA,EAAAA,KAACsC,EAAAA,GAAkB,CAACC,MAAO,CAAEtC,OAAQL,GAAiBiC,SACnDA,MAEC,C,mEC5DV,MAAMW,GAAaC,EAAAA,EAAAA,eAAc,MACpBC,EAAgBA,KAAMC,EAAAA,EAAAA,YAAWH,GAEjCF,EAAqBE,EAAWI,SAC7C,G,kCCJA,MASaR,EAJmBS,OAAOC,OALjB,CACpBC,GAAI,CAAC,YAAa,UAAW,YAAa,WAC1CC,GAAI,CAAC,YAAa,UAAW,YAAa,aAOAC,QAC1C,CAAApD,EAAAS,KAAA,IAAE4C,EAAIC,EAAIC,EAAIC,GAAGxD,GAAGyD,EAAIC,EAAIC,EAAIC,GAAGnD,EAAA,MAAM,CACvCoD,KAAKC,IAAIT,EAAII,GACbI,KAAKC,IAAIR,EAAII,GACbG,KAAKE,IAAIR,EAAII,GACbE,KAAKE,IAAIP,EAAII,GACd,G","sources":["components/Map/MaplibreMap.jsx","components/Map/context.js","data/bounds.js"],"sourcesContent":["import React from \"react\";\nimport \"maplibre-gl/dist/maplibre-gl.css\";\nimport Map, { Marker, useMap } from \"react-map-gl\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport maplibregl from \"maplibre-gl\";\nimport useEventListener from \"@use-it/event-listener\";\nimport { useSnackbar } from \"notistack\";\nimport { MapContextProvider } from \"./context\";\nimport { totalBounds } from \"../../data/bounds\";\nimport maplibreglWorker from \"maplibre-gl/dist/maplibre-gl-csp-worker\";\nmaplibregl.workerClass = maplibreglWorker;\n\nconst MaplibreMarker = ({ lat, lon }) => (\n  <Marker longitude={lon} latitude={lat} anchor=\"bottom\" />\n);\n\nconst convertBounds = ([w, s, e, n]) => [\n  // MapLibre expects bounds to be [LngLatBoundsLike](https://maplibre.org/maplibre-gl-js-docs/api/geography/#lnglatboundslike)\n  // as such the are either LngLat objects in [sw, ne] order or an array of numbers in [w, s, e, n] order.\n  [w, s],\n  [e, n],\n];\n\nconst MapSnappingEventListener = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  const map = useMap().current;\n  useEventListener(\"map.snapTo\", ({ detail: { lat, lng } }) => {\n    // This hook sets up an event listener for the map.snapTo event which\n    // is currently dispatched be an onClick function in CinemaListItem\n    console.log(\"executing `map.snapTo` event with maplibre\");\n\n    try {\n      // [Docs](https://maplibre.org/maplibre-gl-js-docs/api/map/#map#flyto)\n      map.flyTo({\n        center: [lat, lng],\n        zoom: 14,\n      });\n    } catch (e) {\n      console.error(e);\n      enqueueSnackbar(\"Unexpected error while attempting map navigation\", {\n        variant: \"error\",\n      });\n    }\n  });\n  return null;\n};\n\nconst MaplibreMap = ({ children }) => {\n  console.log(\"render Maplibre map\");\n  return (\n    <Map\n      mapLib={maplibregl}\n      mapStyle=\"https://api.maptiler.com/maps/streets-v2/style.json?key=46DCXvzkGNIvqAgCljGV\"\n      initialViewState={{\n        bounds: convertBounds(totalBounds),\n      }}\n      padding={24}\n    >\n      <MapSnappingEventListener />\n      <MapContextProvider value={{ Marker: MaplibreMarker }}>\n        {children}\n      </MapContextProvider>\n    </Map>\n  );\n};\nexport default MaplibreMap;\n","import { createContext, useContext } from 'react';\n\nconst MapContext = createContext(null);\nexport const useMapContext = () => useContext(MapContext);\n\nexport const MapContextProvider = MapContext.Provider;\nexport default MapContext;","// Country bounds drawn via http://bboxfinder.com/\n// they are currently in the follow format [W, S, E, N]\nconst countryBounds = {\n  au: [112.669086, -43.696673, 153.726368, -10.737187],\n  nz: [166.332922, -47.292562, 178.573837, -34.394162],\n}\n// 166.509144322, -46.641235447, 178.517093541, -34.4506617165\nexport const allCountryBounds = Object.values(countryBounds);\n// latitude is West (-) to East (+)\n// longitude is North (+) to South (-)\n\nexport const totalBounds = allCountryBounds.reduce(\n  ([w1, s1, e1, n1], [w2, s2, e2, n2]) => ([\n    Math.min(w1, w2),\n    Math.min(s1, s2),\n    Math.max(e1, e2),\n    Math.max(n1, n2),\n  ])\n)"],"names":["maplibregl","maplibreglWorker","MaplibreMarker","_ref","lat","lon","_jsx","Marker","longitude","latitude","anchor","convertBounds","_ref2","w","s","e","n","MapSnappingEventListener","enqueueSnackbar","useSnackbar","map","useMap","current","useEventListener","_ref3","detail","lng","console","log","flyTo","center","zoom","error","variant","_ref4","children","_jsxs","Map","mapLib","mapStyle","initialViewState","bounds","totalBounds","padding","MapContextProvider","value","MapContext","createContext","useMapContext","useContext","Provider","Object","values","au","nz","reduce","w1","s1","e1","n1","w2","s2","e2","n2","Math","min","max"],"sourceRoot":""}